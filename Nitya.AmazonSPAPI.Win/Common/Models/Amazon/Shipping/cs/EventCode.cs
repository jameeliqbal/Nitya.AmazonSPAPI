/* 
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Amazon.SellingPartnerAPI.Orders.Client.SwaggerDateConverter;

namespace Common.Models.Amzn.Shipping
{
    /// <summary>
    /// The tracking event type.
    /// </summary>
    /// <value>The tracking event type.</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum EventCode
    {
        
        /// <summary>
        /// Enum ReadyForReceive for value: ReadyForReceive
        /// </summary>
        [EnumMember(Value = "ReadyForReceive")]
        ReadyForReceive = 1,
        
        /// <summary>
        /// Enum PickupDone for value: PickupDone
        /// </summary>
        [EnumMember(Value = "PickupDone")]
        PickupDone = 2,
        
        /// <summary>
        /// Enum Delivered for value: Delivered
        /// </summary>
        [EnumMember(Value = "Delivered")]
        Delivered = 3,
        
        /// <summary>
        /// Enum Departed for value: Departed
        /// </summary>
        [EnumMember(Value = "Departed")]
        Departed = 4,
        
        /// <summary>
        /// Enum DeliveryAttempted for value: DeliveryAttempted
        /// </summary>
        [EnumMember(Value = "DeliveryAttempted")]
        DeliveryAttempted = 5,
        
        /// <summary>
        /// Enum Lost for value: Lost
        /// </summary>
        [EnumMember(Value = "Lost")]
        Lost = 6,
        
        /// <summary>
        /// Enum OutForDelivery for value: OutForDelivery
        /// </summary>
        [EnumMember(Value = "OutForDelivery")]
        OutForDelivery = 7,
        
        /// <summary>
        /// Enum ArrivedAtCarrierFacility for value: ArrivedAtCarrierFacility
        /// </summary>
        [EnumMember(Value = "ArrivedAtCarrierFacility")]
        ArrivedAtCarrierFacility = 8,
        
        /// <summary>
        /// Enum Rejected for value: Rejected
        /// </summary>
        [EnumMember(Value = "Rejected")]
        Rejected = 9,
        
        /// <summary>
        /// Enum Undeliverable for value: Undeliverable
        /// </summary>
        [EnumMember(Value = "Undeliverable")]
        Undeliverable = 10,
        
        /// <summary>
        /// Enum PickupCancelled for value: PickupCancelled
        /// </summary>
        [EnumMember(Value = "PickupCancelled")]
        PickupCancelled = 11
    }

}
